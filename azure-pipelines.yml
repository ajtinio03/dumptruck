# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  'system.debug': false

steps:

- task: PowerShell@2
  enabled: true
  displayName: 'Install dependencies'
  inputs:
    targetType: 'inline'
    script: |
      npm ci
    workingDirectory: '$(System.DefaultWorkingDirectory)/'

- task: PowerShell@2
  enabled: true
  displayName: 'Run Playwright tests'
  env:
    PLAYWRIGHT_SERVICE_ACCESS_TOKEN: $(PLAYWRIGHT_SERVICE_ACCESS_TOKEN)
    PLAYWRIGHT_SERVICE_URL: $(PLAYWRIGHT_SERVICE_URL)
    TENANT_NAME: $(TENANT_NAME)
    TEST_QA_USERNAME: $(TEST_QA_USERNAME)
    TEST_QA_PASSWORD: $(TEST_QA_PASSWORD)
    TEST_QA_URL: $(TEST_QA_URL)
    CI: 'true'
  inputs:
    targetType: 'inline'
    script: |
      npx playwright test --config=playwright.service.config.ts --workers=1
    workingDirectory: $(System.DefaultWorkingDirectory)/

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/playwright-report/'
    artifact: 'playwright-report-with-traces'
    publishLocation: 'pipeline'
  condition: succeededOrFailed()

- task: PowerShell@2
  enabled: true
  displayName: 'Remove trace files'
  inputs:
    targetType: 'inline'
    script: |
      Get-ChildItem -Path "data/*.zip" -Recurse | Remove-Item -Force
    workingDirectory: '$(System.DefaultWorkingDirectory)/playwright-report/'
  condition: succeededOrFailed()

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/playwright-report/'
    artifact: 'playwright-report'
    publishLocation: 'pipeline'
  condition: succeededOrFailed()

- task: PublishPipelineArtifact@1
  enabled: false
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/Screenshots/'
    artifact: 'manual-screenshots'
    publishLocation: 'pipeline'
  condition: succeededOrFailed()

- task: PublishTestResults@2
  displayName: 'Publish test results'
  inputs:
    searchFolder: 'test-results'
    testResultsFormat: 'JUnit'
    testResultsFiles: 'junit-results.xml'
    mergeTestResults: true
    testRunTitle: 'Playwright Demo Tests'
  condition: succeededOrFailed() 
